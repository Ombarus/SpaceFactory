[gd_scene load_steps=16 format=3 uid="uid://dkgyf7ht22xfd"]

[ext_resource type="PackedScene" uid="uid://7d4w6g0hma0m" path="res://data/private/models/ue/ModularScifiHallways/Meshes/SM_Camera_A.glb" id="1_la34v"]
[ext_resource type="Material" uid="uid://cuere2eg263ij" path="res://data/material/ModularScifiHallways/M_Glass.tres" id="2_ddvei"]
[ext_resource type="Texture2D" uid="uid://dfhknrfersvd0" path="res://data/private/models/ue/floor/T_Metal_Brushed_N.PNG" id="3_5nmf1"]
[ext_resource type="Texture2D" uid="uid://dgtf5yg0cve2a" path="res://data/private/models/ue/ModularScifiHallways/Textures/T_Trims_A_Diff.PNG" id="4_8er6h"]
[ext_resource type="Texture2D" uid="uid://bdixvqhjbyw3c" path="res://data/private/models/ue/ModularScifiHallways/Textures/T_Trims_A_M.PNG" id="5_wiefj"]
[ext_resource type="Texture2D" uid="uid://bnnu183gtxqno" path="res://data/private/models/ue/ModularScifiHallways/Textures/T_Trims_A_N_normals.PNG" id="6_cp06r"]
[ext_resource type="Texture2D" uid="uid://b4rwabblmhsyp" path="res://data/private/models/ue/floor/T_Metal_Scratches_M.PNG" id="7_qa2vh"]
[ext_resource type="Texture2D" uid="uid://dclkw3cr643x0" path="res://data/private/models/ue/ModularScifiHallways/Textures/T_Trims_A_Diff_B.PNG" id="8_7xpx5"]
[ext_resource type="Texture2D" uid="uid://c6vfs4twmssig" path="res://data/private/models/ue/ModularScifiHallways/Textures/T_Trims_A_M_B.PNG" id="9_87ixt"]

[sub_resource type="Shader" id="Shader_gsqyj"]
code = "shader_type spatial;

uniform sampler2D diffuse;
uniform sampler2D mask;
uniform sampler2D normal;

uniform sampler2D scratches;
uniform sampler2D brushed;

uniform float metallic_green = 0.7f;
uniform float metallic_other = 0.75f;
uniform float mettalic_red = 0.0f;

uniform float norm_detail_u = 18.0f;
uniform float norm_detail_v = 18.0f;

//uniform float r_detail_u = 3.4f;
//uniform float r_detail_v = 3.4f;
uniform float r_detail_u = 2.0f;
uniform float r_detail_v = 2.0f;

uniform float roughness_green = 0.1f;
uniform float roughness_other = 0.2f;
uniform float roughness_red = 0.65f;

uniform float spec_green = 0.5f;
uniform float spec_other = 0.5f;
uniform float spec_red = 0.55f;


void fragment() {
	ALBEDO = texture(diffuse, UV).rgb;
	vec3 mask_rgb = texture(mask, UV).rgb;
	
	float metallic = mix(metallic_other, mettalic_red, mask_rgb.r);
	metallic = mix(metallic, metallic_green, mask_rgb.g);
	METALLIC = metallic;
	
	float spec = mix(spec_other, spec_red, mask_rgb.r);
	spec = mix(spec, spec_green, mask_rgb.g);
	SPECULAR = spec;
	
	vec2 detail_uv = vec2(r_detail_u, r_detail_v);
	detail_uv *= UV;
	float rough = mix(roughness_other, roughness_red, mask_rgb.r);
	rough = mix(rough, roughness_green, mask_rgb.g);
	float scratches_col = texture(scratches, detail_uv).r;
	rough = clamp(rough * scratches_col, 0.0f, 1.0f);
	ROUGHNESS = rough;

	vec3 base_normal = texture(normal, UV).rgb;
	vec2 norm_detail_uv = vec2(norm_detail_u, norm_detail_v);
	norm_detail_uv *= UV;
	vec3 detail_normal = texture(brushed, norm_detail_uv).rgb;
	detail_normal *= vec3(1.0f, 1.0f, 0.0f);
	base_normal = mix(base_normal, detail_normal, 0.5);
	//base_normal = detail_normal;
	NORMAL_MAP = base_normal;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_kr7ll"]
render_priority = 0
shader = SubResource("Shader_gsqyj")
shader_parameter/metallic_green = 0.7
shader_parameter/metallic_other = 0.75
shader_parameter/mettalic_red = 0.0
shader_parameter/norm_detail_u = 18.0
shader_parameter/norm_detail_v = 18.0
shader_parameter/r_detail_u = 2.0
shader_parameter/r_detail_v = 2.0
shader_parameter/roughness_green = 0.2
shader_parameter/roughness_other = 0.2
shader_parameter/roughness_red = 0.65
shader_parameter/spec_green = 0.5
shader_parameter/spec_other = 0.5
shader_parameter/spec_red = 0.55
shader_parameter/diffuse = ExtResource("4_8er6h")
shader_parameter/mask = ExtResource("5_wiefj")
shader_parameter/normal = ExtResource("6_cp06r")
shader_parameter/scratches = ExtResource("7_qa2vh")
shader_parameter/brushed = ExtResource("3_5nmf1")

[sub_resource type="Shader" id="Shader_xwbjs"]
code = "shader_type spatial;

uniform sampler2D diffuse;
uniform sampler2D mask;
uniform sampler2D normal;

uniform sampler2D scratches;
uniform sampler2D brushed;

uniform float metallic_green = 0.7f;
uniform float metallic_other = 0.75f;
uniform float mettalic_red = 0.0f;

uniform float norm_detail_u = 18.0f;
uniform float norm_detail_v = 18.0f;

//uniform float r_detail_u = 3.4f;
//uniform float r_detail_v = 3.4f;
uniform float r_detail_u = 2.0f;
uniform float r_detail_v = 2.0f;

uniform float roughness_green = 0.1f;
uniform float roughness_other = 0.2f;
uniform float roughness_red = 0.65f;

uniform float spec_green = 0.5f;
uniform float spec_other = 0.5f;
uniform float spec_red = 0.55f;

void fragment() {
	ALBEDO = texture(diffuse, UV).rgb;
	vec3 mask_rgb = texture(mask, UV).rgb;
	
	float metallic = mix(metallic_other, mettalic_red, mask_rgb.r);
	metallic = mix(metallic, metallic_green, mask_rgb.g);
	METALLIC = metallic;
	
	float spec = mix(spec_other, spec_red, mask_rgb.r);
	spec = mix(spec, spec_green, mask_rgb.g);
	SPECULAR = spec;
	
	vec2 detail_uv = vec2(r_detail_u, r_detail_v);
	detail_uv *= UV;
	float rough = mix(roughness_other, roughness_red, mask_rgb.r);
	rough = mix(rough, roughness_green, mask_rgb.g);
	float scratches_col = texture(scratches, detail_uv).r;
	rough = clamp(rough * scratches_col, 0.0f, 1.0f);
	ROUGHNESS = rough;

	vec3 base_normal = texture(normal, UV).rgb;
	vec2 norm_detail_uv = vec2(norm_detail_u, norm_detail_v);
	norm_detail_uv *= UV;
	vec3 detail_normal = texture(brushed, norm_detail_uv).rgb;
	detail_normal *= vec3(1.0f, 1.0f, 0.0f);
	base_normal = mix(base_normal, detail_normal, 0.5);
	//base_normal = detail_normal;
	NORMAL_MAP = base_normal;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5quek"]
render_priority = 0
shader = SubResource("Shader_xwbjs")
shader_parameter/metallic_green = 0.7
shader_parameter/metallic_other = 0.75
shader_parameter/mettalic_red = 0.0
shader_parameter/norm_detail_u = 18.0
shader_parameter/norm_detail_v = 18.0
shader_parameter/r_detail_u = 2.0
shader_parameter/r_detail_v = 2.0
shader_parameter/roughness_green = 0.2
shader_parameter/roughness_other = 0.2
shader_parameter/roughness_red = 0.65
shader_parameter/spec_green = 0.5
shader_parameter/spec_other = 0.5
shader_parameter/spec_red = 0.55
shader_parameter/diffuse = ExtResource("8_7xpx5")
shader_parameter/mask = ExtResource("9_87ixt")
shader_parameter/normal = ExtResource("6_cp06r")
shader_parameter/scratches = ExtResource("7_qa2vh")
shader_parameter/brushed = ExtResource("3_5nmf1")

[sub_resource type="Shader" id="Shader_0nw6m"]
code = "shader_type spatial;
render_mode blend_mix;

uniform vec4 ColorGlass : source_color = vec4(0.0, 0.001202, 0.003303, 0.05);
uniform float Roughness = 0.0;
uniform float Specular = 10.0;
uniform float FresnelFalloff = 10.0;
uniform float Refraction = 1.0;

void fragment() {
	ALBEDO = ColorGlass.rgb;
	ALPHA = ColorGlass.a;
	SPECULAR = Specular;
	ROUGHNESS = Roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_v380t"]
render_priority = 0
shader = SubResource("Shader_0nw6m")
shader_parameter/ColorGlass = Color(1, 0, 0.00392157, 0.0509804)
shader_parameter/Roughness = 0.0
shader_parameter/Specular = 1.0
shader_parameter/FresnelFalloff = 10.0
shader_parameter/Refraction = 1.0

[node name="SM_Camera_A" type="Node3D"]

[node name="Root" parent="." instance=ExtResource("1_la34v")]

[node name="SM_Camera_A2" parent="Root" index="0"]
surface_material_override/0 = ExtResource("2_ddvei")
surface_material_override/1 = SubResource("ShaderMaterial_kr7ll")
surface_material_override/2 = SubResource("ShaderMaterial_5quek")
surface_material_override/3 = SubResource("ShaderMaterial_v380t")

[editable path="Root"]
